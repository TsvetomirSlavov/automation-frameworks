Theory Assessment

1. Explain how the role of a tester is different between Agile and Waterfall development environments.


2. List important criteria to consider when deciding which test cases/scenarios should be automated.
  a. The use of static content to assert test results
  b. User interface architecture of the application under test, i.e. are element locators well defined.
  c. Frequency of dynamic elements within the application, i.e. are element id dynamically generated.
  d. How heavily AJAX reliance is the application to ensure test brittleness is minimised.

3. Regression testing is an activity that is sometimes carried out at the end of a development/testing cycle. When else would you expect to execute regression testing apart from immediately before release?
  Execution of regression tests should be continuous part of the application development lifecycle, ideally this should be considered as a key stage within the iterative development approach. Preferably, whenever the development team checks in a code change, fixes or patches, the regression test should be automatically executed through a build system, provided the regression tests are automated (ideally using a headless browser).

4. Your team has started a sprint and, while designing your tests for a user story, you realise that part of a requirement is missing or there are some edge cases that nobody had thought of so far. What would you do?
  - Escalate the situation to the Scrum Master and discuss the possibility of pulling the current user story from the sprint and replacing with another story of similar points; and suggest re-estimating the user story during the next planning session. If the user story can't be pull, ideally will provide new estimates and suggest to the scrum team during next stand up meeting if any stories with less priority that can be pulled to accomodate the user story.

5. What engineering practices would you encourage developers to engage in to help improve the overall quality of the system they are building?
  a. Pair programming / pair code review and rotation of developement pair to facilitate knowledge sharing.
  b. acceptance test-driven development and unit testing.
  c. version control best practices, i.e. checking in code frequently, adding meaningful and concise description to check-in along with the name of the development pair.  
  d. pairing with testers.
  e. use of continuous integration tool.
  f. build should not be left broken

6. Given you have a mobile application that handles sensitive data and financial transactions, and that the application must work on 25+ combinations of operating systems and browsers, across multiple locales and you are using an iterative development approach, what overall test strategy would you apply to keep your regression test defect detection rate low?
